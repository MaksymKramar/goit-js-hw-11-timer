{"version":3,"sources":["index.js"],"names":["CountdownTimer","selector","targetDate","referens","document","querySelector","days","hours","mins","secs","style","display","setInterval","currentTime","Date","now","console","log","getTime","deltaTime","time","getTimeComponents","updateTime","textContent","pad","Math","floor","value","String","padStart","countdownTimer","start"],"mappings":";AA+EA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAvEMA,IAAAA,EAAAA,WAE+B,SAAA,EAAA,GAAtBC,IAAAA,EAAAA,EAAAA,SAASC,EAAAA,EAAAA,WAAa,EAAA,KAAA,GAC5BD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,SAAYC,SAASC,cAAc,KAAKJ,UACxCK,KAAAA,KAAOF,SAASC,cAAiB,GAAA,OAAA,KAAKJ,SAA3C,yBACKM,KAAAA,MAAQH,SAASC,cAAiB,GAAA,OAAA,KAAKJ,SAA5C,0BACKO,KAAAA,KAAOJ,SAASC,cAAiB,GAAA,OAAA,KAAKJ,SAA3C,yBACKQ,KAAAA,KAAOL,SAASC,cAAiB,GAAA,OAAA,KAAKJ,SAA3C,yBA8DJ,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QA1DE,MAAA,WAAQ,IAAA,EAAA,KACDE,KAAAA,SAASO,MAAMC,QAAU,cAC9BC,YAAY,WACJC,IAAAA,EAAcC,KAAKC,MAC3BC,QAAQC,IAAI,EAAKf,WAAWgB,WACpBC,IAAAA,EAAY,EAAKjB,WAAWgB,UAAYL,EACxCO,EAAO,EAAKC,kBAAkBF,GACtCH,QAAQC,IAAIG,GACV,EAAKE,WAAWF,IACf,OAiDP,CAAA,IAAA,aA9CG,MAAA,SAAwC,GAA3Bd,IAAAA,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC1BH,KAAAA,KAAKiB,YAAiBjB,GAAAA,OAAAA,GACtBC,KAAAA,MAAMgB,YAAiBhB,GAAAA,OAAAA,GACvBC,KAAAA,KAAKe,YAAiBf,GAAAA,OAAAA,GACtBC,KAAAA,KAAKc,YAAiBd,GAAAA,OAAAA,KA0C/B,CAAA,IAAA,oBAvCE,MAAA,SAAkBW,GAMX,MAAA,CAACd,KALK,KAAKkB,IAAIC,KAAKC,MAAMN,EAAQ,QAK3Bb,MAJA,KAAKiB,IAAIC,KAAKC,MAAON,EAAQ,MAAyB,OAI/CZ,KAHR,KAAKgB,IAAIC,KAAKC,MAAON,EAAQ,KAAoB,MAGnCX,KAFd,KAAKe,IAAIC,KAAKC,MAAON,EAAQ,IAAc,SAmC1D,CAAA,IAAA,MA9BE,MAAA,SAAIO,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SA6BrC,EAvEM7B,GA8CA8B,EAAiB,IAAI9B,EAAe,CAC1CC,SAAU,WACVC,WAAY,IAAIY,KAAK,kBAGrBgB,EAAeC","file":"src.979287c3.js","sourceRoot":"../src","sourcesContent":["// const refs = {\n//   timer:document.querySelector('#timer-1'),\n//   // days: document.querySelector('[data-value=\"days\"]'),\n//   // hours: document.querySelector('[data-value=\"hours\"]'),\n//   // mins: document.querySelector('[data-value=\"mins\"]'),\n//   // secs: document.querySelector('[data-value=\"secs\"]'), \n// }\n\nclass CountdownTimer{\n\n  constructor({selector,targetDate}) {\n    this.selector = selector;    \n    this.targetDate = targetDate;\n    this.referens =  document.querySelector(this.selector);\n    this.days = document.querySelector(`${this.selector} [data-value=\"days\"]`);\n    this.hours = document.querySelector(`${this.selector} [data-value=\"hours\"]`)\n    this.mins = document.querySelector(`${this.selector} [data-value=\"mins\"]`)\n    this.secs = document.querySelector(`${this.selector} [data-value=\"secs\"]`)\n\n  };\n    \n  start() {\n    this.referens.style.display = 'inline-flex';\n    setInterval(() => {\n      const currentTime = Date.now();\n    console.log(this.targetDate.getTime());\n      const deltaTime = this.targetDate.getTime() - currentTime;\n      const time = this.getTimeComponents(deltaTime);\n    console.log(time)\n      this.updateTime(time);\n    }, 1000);\n  };\n\n   updateTime({ days, hours, mins, secs }) {\n    this.days.textContent = `${days}`;\n    this.hours.textContent = `${hours}`;\n    this.mins.textContent = `${mins}`;\n    this.secs.textContent = `${secs}`; \n  };\n  \n  getTimeComponents(time) {\n  const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n  const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n  const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n  const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n  return {days, hours, mins, secs}\n  };\n  \n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n};\n\nconst countdownTimer = new CountdownTimer({\nselector: '#timer-1',\ntargetDate: new Date('Jun 18, 2021'),\n});\n\ncountdownTimer.start()\n\n\n\n\n// const targetDate = new Date('May 21, 2021')\n\n// console.log(targetDate)\n  \n\n\n// function getTimeComponents(time) {\n// const days = Math.floor(time / (1000 * 60 * 60 * 24));\n// const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n// const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n// const secs = Math.floor((time % (1000 * 60)) / 1000);\n\n// return {days, hours, mins, secs}\n// };\n\n// console.log(getTimeComponents(targetDate))"]}